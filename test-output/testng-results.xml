<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="17" passed="15" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-26T08:43:22Z" name="Suite" finished-at="2024-11-26T09:03:30Z" duration-ms="1207922">
    <groups>
    </groups>
    <test started-at="2024-11-26T08:43:22Z" name="Login" finished-at="2024-11-26T08:43:43Z" duration-ms="20268">
      <class name="New_property_Wadhghat.Login">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:New_property_Wadhghat.Login@4a07d605]" started-at="2024-11-26T14:13:22Z" name="beforetest" finished-at="2024-11-26T14:13:33Z" duration-ms="10841" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="loginPage()[pri:1, instance:New_property_Wadhghat.Login@4a07d605]" started-at="2024-11-26T14:13:33Z" name="loginPage" finished-at="2024-11-26T14:13:43Z" duration-ms="9389" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPage -->
      </class> <!-- New_property_Wadhghat.Login -->
    </test> <!-- Login -->
    <test started-at="2024-11-26T08:43:43Z" name="MODE WISE WISE" finished-at="2024-11-26T08:54:22Z" duration-ms="639246">
      <class name="Payments.Modewise_Payment">
        <test-method signature="CashPayment()[pri:2, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:13:43Z" name="CashPayment" finished-at="2024-11-26T14:15:19Z" duration-ms="96723" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CashPayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:15:19Z" name="aftermethod" finished-at="2024-11-26T14:15:20Z" duration-ms="820" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CashPayment status=SUCCESS method=Modewise_Payment.CashPayment()[pri:2, instance:Payments.Modewise_Payment@5b58ed3c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Modewise_Payment.CashPayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="AdvancePayment()[pri:3, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:15:20Z" name="AdvancePayment" finished-at="2024-11-26T14:16:30Z" depends-on-methods="Payments.Modewise_Payment.CashPayment" duration-ms="69754" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: /html/body/div[3]/div[7]/div/button' (tried for 50 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: /html/body/div[3]/div[7]/div/button' (tried for 50 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
	at pom.CounterPaymentPage.confirm_payment(CounterPaymentPage.java:894)
	at Payments.Modewise_Payment.AdvancePayment(Modewise_Payment.java:189)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"/html/body/div[3]/div[7]/div/button"}
  (Session info: chrome=131.0.6778.86)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [0149da1087ea42c773bd03ab82797870, findElement {value=/html/body/div[3]/div[7]/div/button, using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.86, chrome: {chromedriverVersion: 131.0.6778.85 (3d81e41b6f3a..., userDataDir: C:\Users\admin\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:55037}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:55037/devtoo..., se:cdpVersion: 131.0.6778.86, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0149da1087ea42c773bd03ab82797870
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
	at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at jdk.proxy2/jdk.proxy2.$Proxy15.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
	... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdvancePayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:16:30Z" name="aftermethod" finished-at="2024-11-26T14:16:30Z" duration-ms="233" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AdvancePayment status=FAILURE method=Modewise_Payment.AdvancePayment()[pri:3, instance:Payments.Modewise_Payment@5b58ed3c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Modewise_Payment.AdvancePayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="chequePayment()[pri:4, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:16:30Z" name="chequePayment" finished-at="2024-11-26T14:17:45Z" duration-ms="74843" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chequePayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:17:45Z" name="aftermethod" finished-at="2024-11-26T14:17:45Z" duration-ms="192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chequePayment status=SUCCESS method=Modewise_Payment.chequePayment()[pri:4, instance:Payments.Modewise_Payment@5b58ed3c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Modewise_Payment.chequePayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cheque_fail()[pri:5, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:17:45Z" name="cheque_fail" finished-at="2024-11-26T14:18:47Z" depends-on-methods="Payments.Modewise_Payment.chequePayment" duration-ms="61700" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cheque_fail -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:18:47Z" name="aftermethod" finished-at="2024-11-26T14:18:47Z" duration-ms="237" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cheque_fail status=SUCCESS method=Modewise_Payment.cheque_fail()[pri:5, instance:Payments.Modewise_Payment@5b58ed3c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Modewise_Payment.cheque_fail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="chequePaymentforClear()[pri:6, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:18:47Z" name="chequePaymentforClear" finished-at="2024-11-26T14:20:07Z" duration-ms="80275" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chequePaymentforClear -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:20:07Z" name="aftermethod" finished-at="2024-11-26T14:20:08Z" duration-ms="207" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chequePaymentforClear status=SUCCESS method=Modewise_Payment.chequePaymentforClear()[pri:6, instance:Payments.Modewise_Payment@5b58ed3c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Modewise_Payment.chequePaymentforClear() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cheque_clear()[pri:7, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:20:08Z" name="cheque_clear" finished-at="2024-11-26T14:21:21Z" depends-on-methods="Payments.Modewise_Payment.chequePaymentforClear" duration-ms="72884" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cheque_clear -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:21:21Z" name="aftermethod" finished-at="2024-11-26T14:21:21Z" duration-ms="260" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cheque_clear status=SUCCESS method=Modewise_Payment.cheque_clear()[pri:7, instance:Payments.Modewise_Payment@5b58ed3c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Modewise_Payment.cheque_clear() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="Card()[pri:8, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:21:21Z" name="Card" finished-at="2024-11-26T14:23:01Z" duration-ms="100311" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Card -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:23:01Z" name="aftermethod" finished-at="2024-11-26T14:23:01Z" duration-ms="254" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Card status=SUCCESS method=Modewise_Payment.Card()[pri:8, instance:Payments.Modewise_Payment@5b58ed3c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Modewise_Payment.Card() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="ddPayment()[pri:9, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:23:01Z" name="ddPayment" finished-at="2024-11-26T14:24:22Z" duration-ms="80177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ddPayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:24:22Z" name="aftermethod" finished-at="2024-11-26T14:24:22Z" duration-ms="224" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ddPayment status=SUCCESS method=Modewise_Payment.ddPayment()[pri:9, instance:Payments.Modewise_Payment@5b58ed3c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Modewise_Payment.ddPayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:Payments.Modewise_Payment@5b58ed3c]" started-at="2024-11-26T14:24:22Z" name="aftertest" finished-at="2024-11-26T14:24:22Z" duration-ms="105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- Payments.Modewise_Payment -->
    </test> <!-- MODE WISE WISE -->
    <test started-at="2024-11-26T08:54:22Z" name="TYPE WISE WISE" finished-at="2024-11-26T09:03:30Z" duration-ms="548294">
      <class name="Payments.Typewise_Payment">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:Payments.Typewise_Payment@76ba13c]" started-at="2024-11-26T14:24:22Z" name="beforetest" finished-at="2024-11-26T14:24:22Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="A_Part_CashPayment()[pri:2, instance:Payments.Typewise_Payment@76ba13c]" started-at="2024-11-26T14:24:22Z" name="A_Part_CashPayment" finished-at="2024-11-26T14:25:34Z" duration-ms="72526" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A_Part_CashPayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.Typewise_Payment@76ba13c]" started-at="2024-11-26T14:25:34Z" name="aftermethod" finished-at="2024-11-26T14:25:35Z" duration-ms="216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=A_Part_CashPayment status=SUCCESS method=Typewise_Payment.A_Part_CashPayment()[pri:2, instance:Payments.Typewise_Payment@76ba13c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Typewise_Payment.A_Part_CashPayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="B_Part_CashPayment()[pri:3, instance:Payments.Typewise_Payment@76ba13c]" started-at="2024-11-26T14:25:35Z" name="B_Part_CashPayment" finished-at="2024-11-26T14:27:29Z" duration-ms="114291" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B_Part_CashPayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.Typewise_Payment@76ba13c]" started-at="2024-11-26T14:27:29Z" name="aftermethod" finished-at="2024-11-26T14:27:29Z" duration-ms="392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=B_Part_CashPayment status=SUCCESS method=Typewise_Payment.B_Part_CashPayment()[pri:3, instance:Payments.Typewise_Payment@76ba13c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Typewise_Payment.B_Part_CashPayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="C_Part_CashPayment()[pri:4, instance:Payments.Typewise_Payment@76ba13c]" started-at="2024-11-26T14:27:29Z" name="C_Part_CashPayment" finished-at="2024-11-26T14:28:05Z" duration-ms="35323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C_Part_CashPayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.Typewise_Payment@76ba13c]" started-at="2024-11-26T14:28:05Z" name="aftermethod" finished-at="2024-11-26T14:28:05Z" duration-ms="289" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=C_Part_CashPayment status=SUCCESS method=Typewise_Payment.C_Part_CashPayment()[pri:4, instance:Payments.Typewise_Payment@76ba13c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Typewise_Payment.C_Part_CashPayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="AB_Part_CashPayment()[pri:5, instance:Payments.Typewise_Payment@76ba13c]" started-at="2024-11-26T14:28:05Z" name="AB_Part_CashPayment" finished-at="2024-11-26T14:29:23Z" duration-ms="77758" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AB_Part_CashPayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.Typewise_Payment@76ba13c]" started-at="2024-11-26T14:29:23Z" name="aftermethod" finished-at="2024-11-26T14:29:23Z" duration-ms="230" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AB_Part_CashPayment status=SUCCESS method=Typewise_Payment.AB_Part_CashPayment()[pri:5, instance:Payments.Typewise_Payment@76ba13c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Typewise_Payment.AB_Part_CashPayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="BC_Part_CashPayment()[pri:6, instance:Payments.Typewise_Payment@76ba13c]" started-at="2024-11-26T14:29:23Z" name="BC_Part_CashPayment" finished-at="2024-11-26T14:31:19Z" duration-ms="115917" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BC_Part_CashPayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.Typewise_Payment@76ba13c]" started-at="2024-11-26T14:31:19Z" name="aftermethod" finished-at="2024-11-26T14:31:19Z" duration-ms="213" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=BC_Part_CashPayment status=SUCCESS method=Typewise_Payment.BC_Part_CashPayment()[pri:6, instance:Payments.Typewise_Payment@76ba13c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Typewise_Payment.BC_Part_CashPayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="AC_Part_CashPayment()[pri:7, instance:Payments.Typewise_Payment@76ba13c]" started-at="2024-11-26T14:31:19Z" name="AC_Part_CashPayment" finished-at="2024-11-26T14:32:07Z" duration-ms="47923" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AC_Part_CashPayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.Typewise_Payment@76ba13c]" started-at="2024-11-26T14:32:07Z" name="aftermethod" finished-at="2024-11-26T14:32:07Z" duration-ms="292" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AC_Part_CashPayment status=SUCCESS method=Typewise_Payment.AC_Part_CashPayment()[pri:7, instance:Payments.Typewise_Payment@76ba13c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Typewise_Payment.AC_Part_CashPayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="B_Part_Partial_CashPayment()[pri:8, instance:Payments.Typewise_Payment@76ba13c]" started-at="2024-11-26T14:32:07Z" name="B_Part_Partial_CashPayment" finished-at="2024-11-26T14:33:30Z" duration-ms="82506" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B_Part_Partial_CashPayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.Typewise_Payment@76ba13c]" started-at="2024-11-26T14:33:30Z" name="aftermethod" finished-at="2024-11-26T14:33:30Z" duration-ms="221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=B_Part_Partial_CashPayment status=SUCCESS method=Typewise_Payment.B_Part_Partial_CashPayment()[pri:8, instance:Payments.Typewise_Payment@76ba13c] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Typewise_Payment.B_Part_Partial_CashPayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:Payments.Typewise_Payment@76ba13c]" started-at="2024-11-26T14:33:30Z" name="aftertest" finished-at="2024-11-26T14:33:30Z" duration-ms="134" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- Payments.Typewise_Payment -->
    </test> <!-- TYPE WISE WISE -->
  </suite> <!-- Suite -->
</testng-results>
