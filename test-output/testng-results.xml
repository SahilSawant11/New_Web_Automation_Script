<?xml version="1.0" encoding="UTF-8"?>
<<<<<<< HEAD
<testng-results ignored="1" total="26" passed="20" failed="3" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-13T17:59:48 IST" name="Suite" finished-at="2024-11-13T18:19:43 IST" duration-ms="1195303">
    <groups>
    </groups>
    <test started-at="2024-11-13T17:59:48 IST" name="Login" finished-at="2024-11-13T18:00:02 IST" duration-ms="14646">
      <class name="New_property_Wadhghat.Login">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:New_property_Wadhghat.Login@3c41ed1d]" started-at="2024-11-13T17:59:48 IST" name="beforetest" finished-at="2024-11-13T17:59:50 IST" duration-ms="2273" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="loginPage()[pri:1, instance:New_property_Wadhghat.Login@3c41ed1d]" started-at="2024-11-13T17:59:50 IST" name="loginPage" finished-at="2024-11-13T18:00:02 IST" duration-ms="12321" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPage -->
      </class> <!-- New_property_Wadhghat.Login -->
    </test> <!-- Login -->
    <test started-at="2024-11-13T18:00:02 IST" name="CreateNewProperty" finished-at="2024-11-13T18:07:54 IST" duration-ms="471921">
      <class name="New_property_Wadhghat.CMS_Test">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:00:02 IST" name="beforetest" finished-at="2024-11-13T18:00:02 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="cmsPageWadhghat()[pri:2, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:00:02 IST" name="cmsPageWadhghat" finished-at="2024-11-13T18:00:18 IST" duration-ms="15825" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cmsPageWadhghat -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:00:18 IST" name="aftermethod" finished-at="2024-11-13T18:00:19 IST" duration-ms="737" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cmsPageWadhghat status=SUCCESS method=CMS_Test.cmsPageWadhghat()[pri:2, instance:New_property_Wadhghat.CMS_Test@b3ca52e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.cmsPageWadhghat() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cmsRegisterPageWadhghat()[pri:3, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:00:19 IST" name="cmsRegisterPageWadhghat" finished-at="2024-11-13T18:00:34 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.cmsPageWadhghat" duration-ms="15180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cmsRegisterPageWadhghat -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:00:34 IST" name="aftermethod" finished-at="2024-11-13T18:00:34 IST" duration-ms="266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cmsRegisterPageWadhghat status=SUCCESS method=CMS_Test.cmsRegisterPageWadhghat()[pri:3, instance:New_property_Wadhghat.CMS_Test@b3ca52e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.cmsRegisterPageWadhghat() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cmsComplaintRegisterWadhghat()[pri:4, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:00:34 IST" name="cmsComplaintRegisterWadhghat" finished-at="2024-11-13T18:00:52 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.cmsRegisterPageWadhghat" duration-ms="17154" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cmsComplaintRegisterWadhghat -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:00:52 IST" name="aftermethod" finished-at="2024-11-13T18:00:52 IST" duration-ms="173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cmsComplaintRegisterWadhghat status=SUCCESS method=CMS_Test.cmsComplaintRegisterWadhghat()[pri:4, instance:New_property_Wadhghat.CMS_Test@b3ca52e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.cmsComplaintRegisterWadhghat() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="searchComplaintWadhghat()[pri:5, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:00:52 IST" name="searchComplaintWadhghat" finished-at="2024-11-13T18:01:31 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.cmsComplaintRegisterWadhghat" duration-ms="39594" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchComplaintWadhghat -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:01:31 IST" name="aftermethod" finished-at="2024-11-13T18:01:31 IST" duration-ms="179" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchComplaintWadhghat status=SUCCESS method=CMS_Test.searchComplaintWadhghat()[pri:5, instance:New_property_Wadhghat.CMS_Test@b3ca52e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.searchComplaintWadhghat() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="Dataentry_owner_info()[pri:6, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:01:31 IST" name="Dataentry_owner_info" finished-at="2024-11-13T18:02:04 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.searchComplaintWadhghat" duration-ms="32930" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Dataentry_owner_info -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:02:04 IST" name="aftermethod" finished-at="2024-11-13T18:02:05 IST" duration-ms="240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Dataentry_owner_info status=SUCCESS method=CMS_Test.Dataentry_owner_info()[pri:6, instance:New_property_Wadhghat.CMS_Test@b3ca52e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.Dataentry_owner_info() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="Dataentry_floor_info()[pri:7, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:02:05 IST" name="Dataentry_floor_info" finished-at="2024-11-13T18:02:51 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.Dataentry_owner_info" duration-ms="46323" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Dataentry_floor_info -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:02:51 IST" name="aftermethod" finished-at="2024-11-13T18:02:51 IST" duration-ms="187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Dataentry_floor_info status=SUCCESS method=CMS_Test.Dataentry_floor_info()[pri:7, instance:New_property_Wadhghat.CMS_Test@b3ca52e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.Dataentry_floor_info() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="OldTaxex_info()[pri:8, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:02:51 IST" name="OldTaxex_info" finished-at="2024-11-13T18:04:12 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.Dataentry_floor_info" duration-ms="81290" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OldTaxex_info -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:04:12 IST" name="aftermethod" finished-at="2024-11-13T18:04:13 IST" duration-ms="217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OldTaxex_info status=SUCCESS method=CMS_Test.OldTaxex_info()[pri:8, instance:New_property_Wadhghat.CMS_Test@b3ca52e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.OldTaxex_info() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="AddTaxes_and_UploadFiles()[pri:9, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:04:13 IST" name="AddTaxes_and_UploadFiles" finished-at="2024-11-13T18:06:16 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.OldTaxex_info" duration-ms="122815" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddTaxes_and_UploadFiles -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:06:16 IST" name="aftermethod" finished-at="2024-11-13T18:06:16 IST" duration-ms="196" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddTaxes_and_UploadFiles status=SUCCESS method=CMS_Test.AddTaxes_and_UploadFiles()[pri:9, instance:New_property_Wadhghat.CMS_Test@b3ca52e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.AddTaxes_and_UploadFiles() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="WadhghatApproval()[pri:10, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:06:16 IST" name="WadhghatApproval" finished-at="2024-11-13T18:06:29 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.AddTaxes_and_UploadFiles" duration-ms="13515" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WadhghatApproval -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:06:29 IST" name="aftermethod" finished-at="2024-11-13T18:06:29 IST" duration-ms="249" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WadhghatApproval status=SUCCESS method=CMS_Test.WadhghatApproval()[pri:10, instance:New_property_Wadhghat.CMS_Test@b3ca52e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.WadhghatApproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="councilapproval()[pri:11, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:06:29 IST" name="councilapproval" finished-at="2024-11-13T18:07:54 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.WadhghatApproval" duration-ms="84546" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- councilapproval -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@b3ca52e]" started-at="2024-11-13T18:07:54 IST" name="aftermethod" finished-at="2024-11-13T18:07:54 IST" duration-ms="256" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=councilapproval status=SUCCESS method=CMS_Test.councilapproval()[pri:11, instance:New_property_Wadhghat.CMS_Test@b3ca52e] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void New_property_Wadhghat.CMS_Test.councilapproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- New_property_Wadhghat.CMS_Test -->
    </test> <!-- CreateNewProperty -->
    <test started-at="2024-11-13T18:07:54 IST" name="All Payments" finished-at="2024-11-13T18:11:08 IST" duration-ms="193541">
      <class name="Payments.alltypepayments">
        <test-method signature="CashPayment()[pri:2, instance:Payments.alltypepayments@b6b1987]" started-at="2024-11-13T18:07:54 IST" name="CashPayment" finished-at="2024-11-13T18:09:30 IST" duration-ms="95464" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CashPayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@b6b1987]" started-at="2024-11-13T18:09:30 IST" name="aftermethod" finished-at="2024-11-13T18:09:30 IST" duration-ms="240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CashPayment status=SUCCESS method=alltypepayments.CashPayment()[pri:2, instance:Payments.alltypepayments@b6b1987] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.CashPayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="AdvancePayment()[pri:3, instance:Payments.alltypepayments@b6b1987]" started-at="2024-11-13T18:09:30 IST" name="AdvancePayment" finished-at="2024-11-13T18:10:35 IST" duration-ms="65097" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdvancePayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@b6b1987]" started-at="2024-11-13T18:10:35 IST" name="aftermethod" finished-at="2024-11-13T18:10:35 IST" duration-ms="266" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AdvancePayment status=SUCCESS method=alltypepayments.AdvancePayment()[pri:3, instance:Payments.alltypepayments@b6b1987] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.AdvancePayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="chequePayment()[pri:4, instance:Payments.alltypepayments@b6b1987]" started-at="2024-11-13T18:10:35 IST" name="chequePayment" finished-at="2024-11-13T18:10:46 IST" duration-ms="10722" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate option with value: KH1
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: driver.version: unknown]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate option with value: KH1
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.Select.findOptionsByValue(Select.java:289)
at org.openqa.selenium.support.ui.Select.selectByValue(Select.java:194)
at pom.OfflinePaymentPage.Select_node_no(OfflinePaymentPage.java:143)
at Payments.alltypepayments.chequePayment(alltypepayments.java:276)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chequePayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@b6b1987]" started-at="2024-11-13T18:10:46 IST" name="aftermethod" finished-at="2024-11-13T18:10:46 IST" duration-ms="279" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chequePayment status=FAILURE method=alltypepayments.chequePayment()[pri:4, instance:Payments.alltypepayments@b6b1987] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.chequePayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cheque_fail()[pri:5, instance:Payments.alltypepayments@b6b1987]" started-at="2024-11-13T18:10:46 IST" name="cheque_fail" finished-at="2024-11-13T18:10:46 IST" depends-on-methods="Payments.alltypepayments.chequePayment" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method alltypepayments.cheque_fail()[pri:5, instance:Payments.alltypepayments@b6b1987] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method alltypepayments.cheque_fail()[pri:5, instance:Payments.alltypepayments@b6b1987] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cheque_fail -->
        <test-method signature="chequePaymentforClear()[pri:6, instance:Payments.alltypepayments@b6b1987]" started-at="2024-11-13T18:10:46 IST" name="chequePaymentforClear" finished-at="2024-11-13T18:10:57 IST" duration-ms="10335" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate option with value: KH1
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: driver.version: unknown]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate option with value: KH1
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.Select.findOptionsByValue(Select.java:289)
at org.openqa.selenium.support.ui.Select.selectByValue(Select.java:194)
at pom.OfflinePaymentPage.Select_node_no(OfflinePaymentPage.java:143)
at Payments.alltypepayments.chequePaymentforClear(alltypepayments.java:437)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chequePaymentforClear -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@b6b1987]" started-at="2024-11-13T18:10:57 IST" name="aftermethod" finished-at="2024-11-13T18:10:57 IST" duration-ms="274" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chequePaymentforClear status=FAILURE method=alltypepayments.chequePaymentforClear()[pri:6, instance:Payments.alltypepayments@b6b1987] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.chequePaymentforClear() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cheque_clear()[pri:7, instance:Payments.alltypepayments@b6b1987]" started-at="2024-11-13T18:10:57 IST" name="cheque_clear" finished-at="2024-11-13T18:10:57 IST" depends-on-methods="Payments.alltypepayments.chequePaymentforClear" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method alltypepayments.cheque_clear()[pri:7, instance:Payments.alltypepayments@b6b1987] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method alltypepayments.cheque_clear()[pri:7, instance:Payments.alltypepayments@b6b1987] depends on not successfully finished methods
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:102)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cheque_clear -->
        <test-method signature="Card()[pri:8, instance:Payments.alltypepayments@b6b1987]" started-at="2024-11-13T18:10:57 IST" name="Card" finished-at="2024-11-13T18:11:08 IST" duration-ms="10527" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[Cannot locate option with value: KH1
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: driver.version: unknown]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: Cannot locate option with value: KH1
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: driver.version: unknown
at org.openqa.selenium.support.ui.Select.findOptionsByValue(Select.java:289)
at org.openqa.selenium.support.ui.Select.selectByValue(Select.java:194)
at pom.OfflinePaymentPage.Select_node_no(OfflinePaymentPage.java:143)
at Payments.alltypepayments.Card(alltypepayments.java:597)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Card -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@b6b1987]" started-at="2024-11-13T18:11:08 IST" name="aftermethod" finished-at="2024-11-13T18:11:08 IST" duration-ms="291" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Card status=FAILURE method=alltypepayments.Card()[pri:8, instance:Payments.alltypepayments@b6b1987] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.Card() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:Payments.alltypepayments@b6b1987]" started-at="2024-11-13T18:11:08 IST" name="aftertest" finished-at="2024-11-13T18:11:08 IST" duration-ms="21" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- Payments.alltypepayments -->
    </test> <!-- All Payments -->
    <test started-at="2024-11-13T18:11:08 IST" name="Counter Reports" finished-at="2024-11-13T18:13:59 IST" duration-ms="171304">
      <class name="Reports.DownloadReports">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:Reports.DownloadReports@3b2c0e88]" started-at="2024-11-13T18:11:08 IST" name="beforetest" finished-at="2024-11-13T18:11:08 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="DownloadCounterReports()[pri:2, instance:Reports.DownloadReports@3b2c0e88]" started-at="2024-11-13T18:11:08 IST" name="DownloadCounterReports" finished-at="2024-11-13T18:12:11 IST" duration-ms="63564" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- DownloadCounterReports -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Reports.DownloadReports@3b2c0e88]" started-at="2024-11-13T18:12:11 IST" name="aftermethod" finished-at="2024-11-13T18:12:12 IST" duration-ms="210" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=DownloadCounterReports status=SUCCESS method=DownloadReports.DownloadCounterReports()[pri:2, instance:Reports.DownloadReports@3b2c0e88] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Reports.DownloadReports.DownloadCounterReports() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="AssismentNakkal()[pri:3, instance:Reports.DownloadReports@3b2c0e88]" started-at="2024-11-13T18:12:12 IST" name="AssismentNakkal" finished-at="2024-11-13T18:13:12 IST" duration-ms="60176" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AssismentNakkal -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Reports.DownloadReports@3b2c0e88]" started-at="2024-11-13T18:13:12 IST" name="aftermethod" finished-at="2024-11-13T18:13:12 IST" duration-ms="277" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AssismentNakkal status=SUCCESS method=DownloadReports.AssismentNakkal()[pri:3, instance:Reports.DownloadReports@3b2c0e88] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Reports.DownloadReports.AssismentNakkal() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="NoDueCertificate()[pri:4, instance:Reports.DownloadReports@3b2c0e88]" started-at="2024-11-13T18:13:12 IST" name="NoDueCertificate" finished-at="2024-11-13T18:13:59 IST" duration-ms="46446" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NoDueCertificate -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Reports.DownloadReports@3b2c0e88]" started-at="2024-11-13T18:13:59 IST" name="aftermethod" finished-at="2024-11-13T18:13:59 IST" duration-ms="591" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NoDueCertificate status=SUCCESS method=DownloadReports.NoDueCertificate()[pri:4, instance:Reports.DownloadReports@3b2c0e88] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Reports.DownloadReports.NoDueCertificate() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:Reports.DownloadReports@3b2c0e88]" started-at="2024-11-13T18:13:59 IST" name="aftertest" finished-at="2024-11-13T18:13:59 IST" duration-ms="27" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- Reports.DownloadReports -->
    </test> <!-- Counter Reports -->
    <test started-at="2024-11-13T18:13:59 IST" name="MinorChanges" finished-at="2024-11-13T18:15:26 IST" duration-ms="86650">
      <class name="New_property_Wadhghat.MinorChanges">
        <test-method signature="performMinorChangeAndVerify()[pri:2, instance:New_property_Wadhghat.MinorChanges@4b3a45f1]" started-at="2024-11-13T18:13:59 IST" name="performMinorChangeAndVerify" finished-at="2024-11-13T18:15:26 IST" duration-ms="86451" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performMinorChangeAndVerify -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.MinorChanges@4b3a45f1]" started-at="2024-11-13T18:15:26 IST" name="aftermethod" finished-at="2024-11-13T18:15:26 IST" duration-ms="195" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=performMinorChangeAndVerify status=SUCCESS method=MinorChanges.performMinorChangeAndVerify()[pri:2, instance:New_property_Wadhghat.MinorChanges@4b3a45f1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.MinorChanges.performMinorChangeAndVerify() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- New_property_Wadhghat.MinorChanges -->
    </test> <!-- MinorChanges -->
    <test started-at="2024-11-13T18:15:26 IST" name="CollectionReport" finished-at="2024-11-13T18:16:40 IST" duration-ms="73738">
      <class name="Reports.CollectionReports">
        <test-method signature="collectiontest()[pri:2, instance:Reports.CollectionReports@75b25825]" started-at="2024-11-13T18:15:26 IST" name="collectiontest" finished-at="2024-11-13T18:16:39 IST" duration-ms="73653" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- collectiontest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Reports.CollectionReports@75b25825]" started-at="2024-11-13T18:16:39 IST" name="tearDown" finished-at="2024-11-13T18:16:40 IST" duration-ms="82" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Reports.CollectionReports -->
    </test> <!-- CollectionReport -->
    <test started-at="2024-11-13T18:16:40 IST" name="ReportEngine" finished-at="2024-11-13T18:19:43 IST" duration-ms="183421">
      <class name="Reports.ReportEngine">
        <test-method signature="Notice_report()[pri:2, instance:Reports.ReportEngine@78fbff54]" started-at="2024-11-13T18:16:40 IST" name="Notice_report" finished-at="2024-11-13T18:18:00 IST" duration-ms="80053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Notice_report -->
        <test-method signature="Karakarni_report()[pri:3, instance:Reports.ReportEngine@78fbff54]" started-at="2024-11-13T18:18:00 IST" name="Karakarni_report" finished-at="2024-11-13T18:19:43 IST" duration-ms="103282" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Karakarni_report -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Reports.ReportEngine@78fbff54]" started-at="2024-11-13T18:19:43 IST" name="tearDown" finished-at="2024-11-13T18:19:43 IST" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Reports.ReportEngine -->
    </test> <!-- ReportEngine -->
  </suite> <!-- Suite -->
=======
<testng-results ignored="0" total="2" passed="2" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-12T09:24:27Z" name="Default suite" finished-at="2024-11-12T09:25:45Z" duration-ms="78425">
    <groups>
    </groups>
    <test started-at="2024-11-12T09:24:27Z" name="Default test" finished-at="2024-11-12T09:25:45Z" duration-ms="78425">
      <class name="SmokTesting.CheckPages">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:SmokTesting.CheckPages@74287ea3]" started-at="2024-11-12T14:54:27Z" name="beforetest" finished-at="2024-11-12T14:54:33Z" duration-ms="6643" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="loginPage()[pri:1, instance:SmokTesting.CheckPages@74287ea3]" started-at="2024-11-12T14:54:33Z" name="loginPage" finished-at="2024-11-12T14:54:48Z" duration-ms="14476" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPage -->
        <test-method signature="startTest()[pri:2, instance:SmokTesting.CheckPages@74287ea3]" started-at="2024-11-12T14:54:48Z" name="startTest" finished-at="2024-11-12T14:55:44Z" duration-ms="56646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startTest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:SmokTesting.CheckPages@74287ea3]" started-at="2024-11-12T14:55:44Z" name="tearDown" finished-at="2024-11-12T14:55:45Z" duration-ms="620" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- SmokTesting.CheckPages -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
>>>>>>> 0faebc15d0b38994a29fcbaeaeede3ac55941cc6
</testng-results>
