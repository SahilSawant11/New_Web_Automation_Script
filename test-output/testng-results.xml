<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="22" passed="19" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-08T13:55:37 IST" name="Suite" finished-at="2024-11-08T14:19:09 IST" duration-ms="1412851">
    <groups>
    </groups>
    <test started-at="2024-11-08T13:55:37 IST" name="Login" finished-at="2024-11-08T13:55:56 IST" duration-ms="19145">
      <class name="New_property_Wadhghat.Login">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:New_property_Wadhghat.Login@45752059]" started-at="2024-11-08T13:55:37 IST" name="beforetest" finished-at="2024-11-08T13:55:38 IST" duration-ms="1646" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="loginPage()[pri:1, instance:New_property_Wadhghat.Login@45752059]" started-at="2024-11-08T13:55:38 IST" name="loginPage" finished-at="2024-11-08T13:55:56 IST" duration-ms="17458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPage -->
      </class> <!-- New_property_Wadhghat.Login -->
    </test> <!-- Login -->
    <test started-at="2024-11-08T13:55:56 IST" name="CreateNewProperty" finished-at="2024-11-08T14:04:10 IST" duration-ms="494743">
      <class name="New_property_Wadhghat.CMS_Test">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T13:55:56 IST" name="beforetest" finished-at="2024-11-08T13:55:56 IST" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="cmsPageWadhghat()[pri:2, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T13:55:56 IST" name="cmsPageWadhghat" finished-at="2024-11-08T13:56:11 IST" duration-ms="15069" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cmsPageWadhghat -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T13:56:11 IST" name="aftermethod" finished-at="2024-11-08T13:56:11 IST" duration-ms="521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cmsPageWadhghat status=SUCCESS method=CMS_Test.cmsPageWadhghat()[pri:2, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.cmsPageWadhghat() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cmsRegisterPageWadhghat()[pri:3, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T13:56:11 IST" name="cmsRegisterPageWadhghat" finished-at="2024-11-08T13:56:28 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.cmsPageWadhghat" duration-ms="16784" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cmsRegisterPageWadhghat -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T13:56:28 IST" name="aftermethod" finished-at="2024-11-08T13:56:28 IST" duration-ms="200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cmsRegisterPageWadhghat status=SUCCESS method=CMS_Test.cmsRegisterPageWadhghat()[pri:3, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.cmsRegisterPageWadhghat() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cmsComplaintRegisterWadhghat()[pri:4, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T13:56:28 IST" name="cmsComplaintRegisterWadhghat" finished-at="2024-11-08T13:56:49 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.cmsRegisterPageWadhghat" duration-ms="20466" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cmsComplaintRegisterWadhghat -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T13:56:49 IST" name="aftermethod" finished-at="2024-11-08T13:56:49 IST" duration-ms="164" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cmsComplaintRegisterWadhghat status=SUCCESS method=CMS_Test.cmsComplaintRegisterWadhghat()[pri:4, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.cmsComplaintRegisterWadhghat() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="searchComplaintWadhghat()[pri:5, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T13:56:49 IST" name="searchComplaintWadhghat" finished-at="2024-11-08T13:57:29 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.cmsComplaintRegisterWadhghat" duration-ms="39846" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchComplaintWadhghat -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T13:57:29 IST" name="aftermethod" finished-at="2024-11-08T13:57:29 IST" duration-ms="234" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchComplaintWadhghat status=SUCCESS method=CMS_Test.searchComplaintWadhghat()[pri:5, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.searchComplaintWadhghat() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="Dataentry_owner_info()[pri:6, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T13:57:29 IST" name="Dataentry_owner_info" finished-at="2024-11-08T13:58:03 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.searchComplaintWadhghat" duration-ms="34332" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Dataentry_owner_info -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T13:58:03 IST" name="aftermethod" finished-at="2024-11-08T13:58:04 IST" duration-ms="230" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Dataentry_owner_info status=SUCCESS method=CMS_Test.Dataentry_owner_info()[pri:6, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.Dataentry_owner_info() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="Dataentry_floor_info()[pri:7, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T13:58:04 IST" name="Dataentry_floor_info" finished-at="2024-11-08T13:58:56 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.Dataentry_owner_info" duration-ms="52591" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Dataentry_floor_info -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T13:58:56 IST" name="aftermethod" finished-at="2024-11-08T13:58:56 IST" duration-ms="178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Dataentry_floor_info status=SUCCESS method=CMS_Test.Dataentry_floor_info()[pri:7, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.Dataentry_floor_info() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="OldTaxex_info()[pri:8, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T13:58:56 IST" name="OldTaxex_info" finished-at="2024-11-08T14:00:27 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.Dataentry_floor_info" duration-ms="90677" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OldTaxex_info -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T14:00:27 IST" name="aftermethod" finished-at="2024-11-08T14:00:27 IST" duration-ms="222" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OldTaxex_info status=SUCCESS method=CMS_Test.OldTaxex_info()[pri:8, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.OldTaxex_info() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="AddTaxes_and_UploadFiles()[pri:9, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T14:00:27 IST" name="AddTaxes_and_UploadFiles" finished-at="2024-11-08T14:02:27 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.OldTaxex_info" duration-ms="119622" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddTaxes_and_UploadFiles -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T14:02:27 IST" name="aftermethod" finished-at="2024-11-08T14:02:27 IST" duration-ms="200" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddTaxes_and_UploadFiles status=SUCCESS method=CMS_Test.AddTaxes_and_UploadFiles()[pri:9, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.AddTaxes_and_UploadFiles() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="WadhghatApproval()[pri:10, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T14:02:27 IST" name="WadhghatApproval" finished-at="2024-11-08T14:02:42 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.AddTaxes_and_UploadFiles" duration-ms="14857" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WadhghatApproval -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T14:02:42 IST" name="aftermethod" finished-at="2024-11-08T14:02:42 IST" duration-ms="217" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WadhghatApproval status=SUCCESS method=CMS_Test.WadhghatApproval()[pri:10, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.WadhghatApproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="councilapproval()[pri:11, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T14:02:42 IST" name="councilapproval" finished-at="2024-11-08T14:04:10 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.WadhghatApproval" duration-ms="88002" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- councilapproval -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-08T14:04:10 IST" name="aftermethod" finished-at="2024-11-08T14:04:10 IST" duration-ms="296" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=councilapproval status=SUCCESS method=CMS_Test.councilapproval()[pri:11, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void New_property_Wadhghat.CMS_Test.councilapproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- New_property_Wadhghat.CMS_Test -->
    </test> <!-- CreateNewProperty -->
    <test started-at="2024-11-08T14:04:10 IST" name="All Payments" finished-at="2024-11-08T14:14:44 IST" duration-ms="634037">
      <class name="Payments.alltypepayments">
        <test-method signature="CashPayment()[pri:2, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-08T14:04:10 IST" name="CashPayment" finished-at="2024-11-08T14:05:59 IST" duration-ms="108718" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CashPayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-08T14:05:59 IST" name="aftermethod" finished-at="2024-11-08T14:05:59 IST" duration-ms="202" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CashPayment status=SUCCESS method=alltypepayments.CashPayment()[pri:2, instance:Payments.alltypepayments@3543df7d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.CashPayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="chequePayment()[pri:4, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-08T14:05:59 IST" name="chequePayment" finished-at="2024-11-08T14:07:18 IST" duration-ms="78791" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chequePayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-08T14:07:18 IST" name="aftermethod" finished-at="2024-11-08T14:07:18 IST" duration-ms="216" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chequePayment status=SUCCESS method=alltypepayments.chequePayment()[pri:4, instance:Payments.alltypepayments@3543df7d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.chequePayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cheque_fail()[pri:5, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-08T14:07:18 IST" name="cheque_fail" finished-at="2024-11-08T14:09:25 IST" depends-on-methods="Payments.alltypepayments.chequePayment" duration-ms="126282" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='ContentPlaceHolder1_GVData_chkRow_0']' (tried for 120 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='ContentPlaceHolder1_GVData_chkRow_0']' (tried for 120 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at pom.DDChequeclearPage.SelectCheque(DDChequeclearPage.java:119)
at Payments.alltypepayments.cheque_fail(alltypepayments.java:365)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='ContentPlaceHolder1_GVData_chkRow_0']"}
  (Session info: chrome=130.0.6723.92)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [794af067ae8331b721b653080cb664ad, findElement {value=//*[@id='ContentPlaceHolder1_GVData_chkRow_0'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.92, chrome: {chromedriverVersion: 130.0.6723.116 (6ac35f94ae3..., userDataDir: C:\Users\STHAPA~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:52445}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:52445/devtoo..., se:cdpVersion: 130.0.6723.92, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 794af067ae8331b721b653080cb664ad
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
... 28 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cheque_fail -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-08T14:09:25 IST" name="aftermethod" finished-at="2024-11-08T14:09:25 IST" duration-ms="205" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cheque_fail status=FAILURE method=alltypepayments.cheque_fail()[pri:5, instance:Payments.alltypepayments@3543df7d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.cheque_fail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="chequePaymentforClear()[pri:6, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-08T14:09:25 IST" name="chequePaymentforClear" finished-at="2024-11-08T14:10:45 IST" duration-ms="79650" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chequePaymentforClear -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-08T14:10:45 IST" name="aftermethod" finished-at="2024-11-08T14:10:45 IST" duration-ms="187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chequePaymentforClear status=SUCCESS method=alltypepayments.chequePaymentforClear()[pri:6, instance:Payments.alltypepayments@3543df7d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.chequePaymentforClear() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cheque_clear()[pri:7, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-08T14:10:45 IST" name="cheque_clear" finished-at="2024-11-08T14:12:50 IST" duration-ms="125170" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='ContentPlaceHolder1_GVData_chkRow_0']' (tried for 120 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //*[@id='ContentPlaceHolder1_GVData_chkRow_0']' (tried for 120 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
at pom.DDChequeclearPage.SelectCheque(DDChequeclearPage.java:119)
at Payments.alltypepayments.cheque_clear(alltypepayments.java:526)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id='ContentPlaceHolder1_GVData_chkRow_0']"}
  (Session info: chrome=130.0.6723.92)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23.0.1'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [794af067ae8331b721b653080cb664ad, findElement {value=//*[@id='ContentPlaceHolder1_GVData_chkRow_0'], using=xpath}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.92, chrome: {chromedriverVersion: 130.0.6723.116 (6ac35f94ae3..., userDataDir: C:\Users\STHAPA~1\AppData\L...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:52445}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:52445/devtoo..., se:cdpVersion: 130.0.6723.92, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 794af067ae8331b721b653080cb664ad
at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at jdk.proxy2/jdk.proxy2.$Proxy18.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
... 28 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cheque_clear -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-08T14:12:50 IST" name="aftermethod" finished-at="2024-11-08T14:12:50 IST" duration-ms="174" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cheque_clear status=FAILURE method=alltypepayments.cheque_clear()[pri:7, instance:Payments.alltypepayments@3543df7d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.cheque_clear() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="Card()[pri:8, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-08T14:12:50 IST" name="Card" finished-at="2024-11-08T14:14:44 IST" duration-ms="114157" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Card -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-08T14:14:44 IST" name="aftermethod" finished-at="2024-11-08T14:14:44 IST" duration-ms="228" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Card status=SUCCESS method=alltypepayments.Card()[pri:8, instance:Payments.alltypepayments@3543df7d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.Card() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-08T14:14:44 IST" name="aftertest" finished-at="2024-11-08T14:14:44 IST" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- Payments.alltypepayments -->
    </test> <!-- All Payments -->
    <test started-at="2024-11-08T14:14:45 IST" name="MinorChanges" finished-at="2024-11-08T14:16:14 IST" duration-ms="89296">
      <class name="New_property_Wadhghat.MinorChanges">
        <test-method signature="performMinorChangeAndVerify()[pri:2, instance:New_property_Wadhghat.MinorChanges@5bd82fed]" started-at="2024-11-08T14:14:45 IST" name="performMinorChangeAndVerify" finished-at="2024-11-08T14:16:14 IST" duration-ms="89026" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performMinorChangeAndVerify -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.MinorChanges@5bd82fed]" started-at="2024-11-08T14:16:14 IST" name="aftermethod" finished-at="2024-11-08T14:16:14 IST" duration-ms="268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=performMinorChangeAndVerify status=SUCCESS method=MinorChanges.performMinorChangeAndVerify()[pri:2, instance:New_property_Wadhghat.MinorChanges@5bd82fed] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.MinorChanges.performMinorChangeAndVerify() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- New_property_Wadhghat.MinorChanges -->
    </test> <!-- MinorChanges -->
    <test started-at="2024-11-08T14:16:14 IST" name="CollectionReport" finished-at="2024-11-08T14:17:03 IST" duration-ms="49209">
      <class name="Reports.CollectionReports">
        <test-method signature="collectiontest()[pri:2, instance:Reports.CollectionReports@3eeb318f]" started-at="2024-11-08T14:16:14 IST" name="collectiontest" finished-at="2024-11-08T14:17:03 IST" duration-ms="49140" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- collectiontest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Reports.CollectionReports@3eeb318f]" started-at="2024-11-08T14:17:03 IST" name="tearDown" finished-at="2024-11-08T14:17:03 IST" duration-ms="67" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Reports.CollectionReports -->
    </test> <!-- CollectionReport -->
    <test started-at="2024-11-08T14:17:03 IST" name="ReportEngine" finished-at="2024-11-08T14:19:09 IST" duration-ms="126347">
      <class name="Reports.ReportEngine">
        <test-method signature="Notice_report()[pri:2, instance:Reports.ReportEngine@13cf7d52]" started-at="2024-11-08T14:17:03 IST" name="Notice_report" finished-at="2024-11-08T14:18:07 IST" duration-ms="64105" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Notice_report -->
        <test-method signature="Karakarni_report()[pri:3, instance:Reports.ReportEngine@13cf7d52]" started-at="2024-11-08T14:18:07 IST" name="Karakarni_report" finished-at="2024-11-08T14:19:09 IST" duration-ms="62165" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Karakarni_report -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Reports.ReportEngine@13cf7d52]" started-at="2024-11-08T14:19:09 IST" name="tearDown" finished-at="2024-11-08T14:19:09 IST" duration-ms="70" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Reports.ReportEngine -->
    </test> <!-- ReportEngine -->
  </suite> <!-- Suite -->
</testng-results>
