<?xml version="1.0" encoding="UTF-8"?>
<<<<<<< HEAD
<testng-results ignored="0" total="12" passed="8" failed="2" skipped="2">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-29T10:19:13Z" name="Suite" finished-at="2024-11-29T10:25:36Z" duration-ms="382862">
    <groups>
    </groups>
    <test started-at="2024-11-29T10:19:13Z" name="Login" finished-at="2024-11-29T10:19:31Z" duration-ms="17410">
      <class name="New_property_Wadhghat.Login">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:New_property_Wadhghat.Login@7f2cfe3f]" started-at="2024-11-29T15:49:13Z" name="beforetest" finished-at="2024-11-29T15:49:20Z" duration-ms="6883" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="loginPage()[pri:1, instance:New_property_Wadhghat.Login@7f2cfe3f]" started-at="2024-11-29T15:49:20Z" name="loginPage" finished-at="2024-11-29T15:49:31Z" duration-ms="10488" status="PASS">
=======
<testng-results ignored="0" total="9" passed="9" failed="0" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-26T18:45:21 IST" name="Suite" finished-at="2024-11-26T18:55:21 IST" duration-ms="600218">
    <groups>
    </groups>
    <test started-at="2024-11-26T18:45:21 IST" name="Login" finished-at="2024-11-26T18:45:44 IST" duration-ms="22858">
      <class name="New_property_Wadhghat.Login">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:New_property_Wadhghat.Login@3c41ed1d]" started-at="2024-11-26T18:45:21 IST" name="beforetest" finished-at="2024-11-26T18:45:27 IST" duration-ms="6461" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="loginPage()[pri:1, instance:New_property_Wadhghat.Login@3c41ed1d]" started-at="2024-11-26T18:45:27 IST" name="loginPage" finished-at="2024-11-26T18:45:44 IST" duration-ms="16359" status="PASS">
>>>>>>> test
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPage -->
      </class> <!-- New_property_Wadhghat.Login -->
    </test> <!-- Login -->
<<<<<<< HEAD
    <test started-at="2024-11-29T10:19:31Z" name="CreateNewProperty" finished-at="2024-11-29T10:25:08Z" duration-ms="337472">
      <class name="New_property_Wadhghat.CMS_Test">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:49:31Z" name="beforetest" finished-at="2024-11-29T15:49:31Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="cmsPageWadhghat()[pri:2, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:49:31Z" name="cmsPageWadhghat" finished-at="2024-11-29T15:49:47Z" duration-ms="15777" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cmsPageWadhghat -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:49:47Z" name="aftermethod" finished-at="2024-11-29T15:49:48Z" duration-ms="873" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cmsPageWadhghat status=SUCCESS method=CMS_Test.cmsPageWadhghat()[pri:2, instance:New_property_Wadhghat.CMS_Test@536dbea0] output={null}]]]>
=======
    <test started-at="2024-11-26T18:45:44 IST" name="All Payments" finished-at="2024-11-26T18:55:21 IST" duration-ms="577334">
      <class name="Payments.Modewise_Payment">
        <test-method signature="CashPayment()[pri:2, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:45:44 IST" name="CashPayment" finished-at="2024-11-26T18:47:20 IST" duration-ms="95772" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CashPayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:47:20 IST" name="aftermethod" finished-at="2024-11-26T18:47:20 IST" duration-ms="598" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CashPayment status=SUCCESS method=Modewise_Payment.CashPayment()[pri:2, instance:Payments.Modewise_Payment@5644dc81] output={null}]]]>
>>>>>>> test
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.cmsPageWadhghat() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
<<<<<<< HEAD
        <test-method signature="cmsRegisterPageWadhghat()[pri:3, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:49:48Z" name="cmsRegisterPageWadhghat" finished-at="2024-11-29T15:50:04Z" duration-ms="16464" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cmsRegisterPageWadhghat -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:50:04Z" name="aftermethod" finished-at="2024-11-29T15:50:04Z" duration-ms="204" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cmsRegisterPageWadhghat status=SUCCESS method=CMS_Test.cmsRegisterPageWadhghat()[pri:3, instance:New_property_Wadhghat.CMS_Test@536dbea0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.cmsRegisterPageWadhghat() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cmsComplaintRegisterWadhghat()[pri:4, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:50:04Z" name="cmsComplaintRegisterWadhghat" finished-at="2024-11-29T15:50:22Z" depends-on-methods="New_property_Wadhghat.CMS_Test.cmsRegisterPageWadhghat" duration-ms="18257" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cmsComplaintRegisterWadhghat -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:50:22Z" name="aftermethod" finished-at="2024-11-29T15:50:23Z" duration-ms="250" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cmsComplaintRegisterWadhghat status=SUCCESS method=CMS_Test.cmsComplaintRegisterWadhghat()[pri:4, instance:New_property_Wadhghat.CMS_Test@536dbea0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.cmsComplaintRegisterWadhghat() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="searchComplaintWadhghat()[pri:5, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:50:23Z" name="searchComplaintWadhghat" finished-at="2024-11-29T15:51:06Z" depends-on-methods="New_property_Wadhghat.CMS_Test.cmsComplaintRegisterWadhghat" duration-ms="42929" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchComplaintWadhghat -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:51:06Z" name="aftermethod" finished-at="2024-11-29T15:51:06Z" duration-ms="187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchComplaintWadhghat status=SUCCESS method=CMS_Test.searchComplaintWadhghat()[pri:5, instance:New_property_Wadhghat.CMS_Test@536dbea0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.searchComplaintWadhghat() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="Dataentry_owner_info()[pri:6, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:51:06Z" name="Dataentry_owner_info" finished-at="2024-11-29T15:51:40Z" depends-on-methods="New_property_Wadhghat.CMS_Test.searchComplaintWadhghat" duration-ms="34432" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Dataentry_owner_info -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:51:40Z" name="aftermethod" finished-at="2024-11-29T15:51:40Z" duration-ms="213" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Dataentry_owner_info status=SUCCESS method=CMS_Test.Dataentry_owner_info()[pri:6, instance:New_property_Wadhghat.CMS_Test@536dbea0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.Dataentry_owner_info() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="Dataentry_floor_info()[pri:7, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:51:40Z" name="Dataentry_floor_info" finished-at="2024-11-29T15:52:34Z" depends-on-methods="New_property_Wadhghat.CMS_Test.Dataentry_owner_info" duration-ms="53990" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Dataentry_floor_info -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:52:34Z" name="aftermethod" finished-at="2024-11-29T15:52:35Z" duration-ms="219" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Dataentry_floor_info status=SUCCESS method=CMS_Test.Dataentry_floor_info()[pri:7, instance:New_property_Wadhghat.CMS_Test@536dbea0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.Dataentry_floor_info() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="OldTaxex_info()[pri:8, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:52:35Z" name="OldTaxex_info" finished-at="2024-11-29T15:53:32Z" depends-on-methods="New_property_Wadhghat.CMS_Test.Dataentry_floor_info" duration-ms="57147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OldTaxex_info -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:53:32Z" name="aftermethod" finished-at="2024-11-29T15:53:38Z" duration-ms="6382" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OldTaxex_info status=SUCCESS method=CMS_Test.OldTaxex_info()[pri:8, instance:New_property_Wadhghat.CMS_Test@536dbea0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.OldTaxex_info() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="AddTaxes_and_UploadFiles()[pri:9, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:53:38Z" name="AddTaxes_and_UploadFiles" finished-at="2024-11-29T15:55:08Z" depends-on-methods="New_property_Wadhghat.CMS_Test.OldTaxex_info" duration-ms="89905" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchElementException">
            <message>
              <![CDATA[no such element: Unable to locate element: {"method":"xpath","selector":"//a[@id='ContentPlaceHolder1_GVWadhGhatDocument_lnkUpload_9']"}
  (Session info: chrome=131.0.6778.86)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [da5c4fbf757c871be95c25a9b27c8fc1, findElement {using=xpath, value=//a[@id='ContentPlaceHolder1_GVWadhGhatDocument_lnkUpload_9']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.86, chrome: {chromedriverVersion: 131.0.6778.85 (3d81e41b6f3a..., userDataDir: C:\Users\admin\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58408}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58408/devtoo..., se:cdpVersion: 131.0.6778.86, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: da5c4fbf757c871be95c25a9b27c8fc1]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//a[@id='ContentPlaceHolder1_GVWadhGhatDocument_lnkUpload_9']"}
  (Session info: chrome=131.0.6778.86)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [da5c4fbf757c871be95c25a9b27c8fc1, findElement {using=xpath, value=//a[@id='ContentPlaceHolder1_GVWadhGhatDocument_lnkUpload_9']}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.86, chrome: {chromedriverVersion: 131.0.6778.85 (3d81e41b6f3a..., userDataDir: C:\Users\admin\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58408}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58408/devtoo..., se:cdpVersion: 131.0.6778.86, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: da5c4fbf757c871be95c25a9b27c8fc1
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
	at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at jdk.proxy2/jdk.proxy2.$Proxy15.click(Unknown Source)
	at pom.AddTaxesPage.document_upload_wadhaghat_kagadpatra10(AddTaxesPage.java:209)
	at New_property_Wadhghat.CMS_Test.AddTaxes_and_UploadFiles(CMS_Test.java:378)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchElementException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddTaxes_and_UploadFiles -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:55:08Z" name="aftermethod" finished-at="2024-11-29T15:55:08Z" duration-ms="187" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddTaxes_and_UploadFiles status=FAILURE method=CMS_Test.AddTaxes_and_UploadFiles()[pri:9, instance:New_property_Wadhghat.CMS_Test@536dbea0] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.AddTaxes_and_UploadFiles() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="WadhghatApproval()[pri:10, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:55:08Z" name="WadhghatApproval" finished-at="2024-11-29T15:55:08Z" depends-on-methods="New_property_Wadhghat.CMS_Test.AddTaxes_and_UploadFiles" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method CMS_Test.WadhghatApproval()[pri:10, instance:New_property_Wadhghat.CMS_Test@536dbea0] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method CMS_Test.WadhghatApproval()[pri:10, instance:New_property_Wadhghat.CMS_Test@536dbea0] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1084)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WadhghatApproval -->
        <test-method signature="councilapproval()[pri:11, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:55:08Z" name="councilapproval" finished-at="2024-11-29T15:55:08Z" depends-on-methods="New_property_Wadhghat.CMS_Test.WadhghatApproval" duration-ms="0" status="SKIP">
          <exception class="java.lang.Throwable">
            <message>
              <![CDATA[Method CMS_Test.councilapproval()[pri:11, instance:New_property_Wadhghat.CMS_Test@536dbea0] depends on not successfully finished methods]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.Throwable: Method CMS_Test.councilapproval()[pri:11, instance:New_property_Wadhghat.CMS_Test@536dbea0] depends on not successfully finished methods
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1084)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.Throwable -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- councilapproval -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:New_property_Wadhghat.CMS_Test@536dbea0]" started-at="2024-11-29T15:55:08Z" name="tearDown" finished-at="2024-11-29T15:55:08Z" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- New_property_Wadhghat.CMS_Test -->
    </test> <!-- CreateNewProperty -->
    <test started-at="2024-11-29T10:25:08Z" name="Online Counter Checking" finished-at="2024-11-29T10:25:36Z" duration-ms="27864">
      <class name="Reports.OnlineCounterReports">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:Reports.OnlineCounterReports@64beebb7]" started-at="2024-11-29T15:55:08Z" name="beforetest" finished-at="2024-11-29T15:55:08Z" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="TaxCompareTest()[pri:3, instance:Reports.OnlineCounterReports@64beebb7]" started-at="2024-11-29T15:55:08Z" name="TaxCompareTest" finished-at="2024-11-29T15:55:36Z" duration-ms="27742" status="FAIL">
          <exception class="org.openqa.selenium.NoSuchWindowException">
            <message>
              <![CDATA[no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=131.0.6778.86)
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [da5c4fbf757c871be95c25a9b27c8fc1, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.86, chrome: {chromedriverVersion: 131.0.6778.85 (3d81e41b6f3a..., userDataDir: C:\Users\admin\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58408}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58408/devtoo..., se:cdpVersion: 131.0.6778.86, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: da5c4fbf757c871be95c25a9b27c8fc1]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.NoSuchWindowException: no such window: target window already closed
from unknown error: web view not found
  (Session info: chrome=131.0.6778.86)
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [da5c4fbf757c871be95c25a9b27c8fc1, screenshot {}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 131.0.6778.86, chrome: {chromedriverVersion: 131.0.6778.85 (3d81e41b6f3a..., userDataDir: C:\Users\admin\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:58408}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:58408/devtoo..., se:cdpVersion: 131.0.6778.86, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: da5c4fbf757c871be95c25a9b27c8fc1
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
	at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:591)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:595)
	at org.openqa.selenium.remote.RemoteWebDriver.getScreenshotAs(RemoteWebDriver.java:321)
	at utility.TakeScreenshoot.GetScreenshotFullBase64(TakeScreenshoot.java:100)
	at Reports.OnlineCounterReports.TaxCompareTest(OnlineCounterReports.java:92)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.NoSuchWindowException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- TaxCompareTest -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Reports.OnlineCounterReports@64beebb7]" started-at="2024-11-29T15:55:36Z" name="aftermethod" finished-at="2024-11-29T15:55:36Z" duration-ms="89" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=TaxCompareTest status=FAILURE method=OnlineCounterReports.TaxCompareTest()[pri:3, instance:Reports.OnlineCounterReports@64beebb7] output={null}]]]>
=======
        <test-method signature="AdvancePayment()[pri:3, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:47:20 IST" name="AdvancePayment" finished-at="2024-11-26T18:48:14 IST" depends-on-methods="Payments.Modewise_Payment.CashPayment" duration-ms="54193" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdvancePayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:48:14 IST" name="aftermethod" finished-at="2024-11-26T18:48:15 IST" duration-ms="205" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AdvancePayment status=SUCCESS method=Modewise_Payment.AdvancePayment()[pri:3, instance:Payments.Modewise_Payment@5644dc81] output={null}]]]>
>>>>>>> test
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Reports.OnlineCounterReports.TaxCompareTest() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
<<<<<<< HEAD
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Reports.OnlineCounterReports@64beebb7]" started-at="2024-11-29T15:55:36Z" name="tearDown" finished-at="2024-11-29T15:55:36Z" duration-ms="23" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Reports.OnlineCounterReports -->
    </test> <!-- Online Counter Checking -->
=======
        <test-method signature="chequePayment()[pri:4, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:48:15 IST" name="chequePayment" finished-at="2024-11-26T18:49:30 IST" duration-ms="75147" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chequePayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:49:30 IST" name="aftermethod" finished-at="2024-11-26T18:49:30 IST" duration-ms="221" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chequePayment status=SUCCESS method=Modewise_Payment.chequePayment()[pri:4, instance:Payments.Modewise_Payment@5644dc81] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Modewise_Payment.chequePayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cheque_fail()[pri:5, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:49:30 IST" name="cheque_fail" finished-at="2024-11-26T18:50:14 IST" depends-on-methods="Payments.Modewise_Payment.chequePayment" duration-ms="44366" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cheque_fail -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:50:14 IST" name="aftermethod" finished-at="2024-11-26T18:50:15 IST" duration-ms="239" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cheque_fail status=SUCCESS method=Modewise_Payment.cheque_fail()[pri:5, instance:Payments.Modewise_Payment@5644dc81] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Modewise_Payment.cheque_fail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="chequePaymentforClear()[pri:6, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:50:15 IST" name="chequePaymentforClear" finished-at="2024-11-26T18:51:34 IST" duration-ms="79902" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chequePaymentforClear -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:51:34 IST" name="aftermethod" finished-at="2024-11-26T18:51:35 IST" duration-ms="257" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chequePaymentforClear status=SUCCESS method=Modewise_Payment.chequePaymentforClear()[pri:6, instance:Payments.Modewise_Payment@5644dc81] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Modewise_Payment.chequePaymentforClear() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cheque_clear()[pri:7, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:51:35 IST" name="cheque_clear" finished-at="2024-11-26T18:52:23 IST" depends-on-methods="Payments.Modewise_Payment.chequePaymentforClear" duration-ms="48492" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cheque_clear -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:52:23 IST" name="aftermethod" finished-at="2024-11-26T18:52:23 IST" duration-ms="225" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cheque_clear status=SUCCESS method=Modewise_Payment.cheque_clear()[pri:7, instance:Payments.Modewise_Payment@5644dc81] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Modewise_Payment.cheque_clear() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="Card()[pri:8, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:52:23 IST" name="Card" finished-at="2024-11-26T18:54:00 IST" duration-ms="96230" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Card -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:54:00 IST" name="aftermethod" finished-at="2024-11-26T18:54:00 IST" duration-ms="301" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Card status=SUCCESS method=Modewise_Payment.Card()[pri:8, instance:Payments.Modewise_Payment@5644dc81] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Modewise_Payment.Card() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="ddPayment()[pri:9, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:54:00 IST" name="ddPayment" finished-at="2024-11-26T18:55:21 IST" duration-ms="80925" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ddPayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:55:21 IST" name="aftermethod" finished-at="2024-11-26T18:55:21 IST" duration-ms="201" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=ddPayment status=SUCCESS method=Modewise_Payment.ddPayment()[pri:9, instance:Payments.Modewise_Payment@5644dc81] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.Modewise_Payment.ddPayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:Payments.Modewise_Payment@5644dc81]" started-at="2024-11-26T18:55:21 IST" name="aftertest" finished-at="2024-11-26T18:55:21 IST" duration-ms="31" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- Payments.Modewise_Payment -->
    </test> <!-- All Payments -->
>>>>>>> test
  </suite> <!-- Suite -->
</testng-results>
