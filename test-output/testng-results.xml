<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="1" total="22" passed="19" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-07T19:49:04 IST" name="Suite" finished-at="2024-11-07T20:07:30 IST" duration-ms="1105670">
    <groups>
    </groups>
    <test started-at="2024-11-07T19:49:04 IST" name="Login" finished-at="2024-11-07T19:49:20 IST" duration-ms="16546">
      <class name="New_property_Wadhghat.Login">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:New_property_Wadhghat.Login@45752059]" started-at="2024-11-07T19:49:04 IST" name="beforetest" finished-at="2024-11-07T19:49:05 IST" duration-ms="1354" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="loginPage()[pri:1, instance:New_property_Wadhghat.Login@45752059]" started-at="2024-11-07T19:49:05 IST" name="loginPage" finished-at="2024-11-07T19:49:20 IST" duration-ms="15150" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPage -->
      </class> <!-- New_property_Wadhghat.Login -->
    </test> <!-- Login -->
    <test started-at="2024-11-07T19:49:20 IST" name="CreateNewProperty" finished-at="2024-11-07T19:56:25 IST" duration-ms="424369">
      <class name="New_property_Wadhghat.CMS_Test">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:49:20 IST" name="beforetest" finished-at="2024-11-07T19:49:20 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="cmsPageWadhghat()[pri:2, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:49:20 IST" name="cmsPageWadhghat" finished-at="2024-11-07T19:49:33 IST" duration-ms="12168" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cmsPageWadhghat -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:49:33 IST" name="aftermethod" finished-at="2024-11-07T19:49:33 IST" duration-ms="756" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cmsPageWadhghat status=SUCCESS method=CMS_Test.cmsPageWadhghat()[pri:2, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.cmsPageWadhghat() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cmsRegisterPageWadhghat()[pri:3, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:49:33 IST" name="cmsRegisterPageWadhghat" finished-at="2024-11-07T19:49:48 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.cmsPageWadhghat" duration-ms="14864" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cmsRegisterPageWadhghat -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:49:48 IST" name="aftermethod" finished-at="2024-11-07T19:49:48 IST" duration-ms="244" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cmsRegisterPageWadhghat status=SUCCESS method=CMS_Test.cmsRegisterPageWadhghat()[pri:3, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.cmsRegisterPageWadhghat() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cmsComplaintRegisterWadhghat()[pri:4, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:49:48 IST" name="cmsComplaintRegisterWadhghat" finished-at="2024-11-07T19:50:05 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.cmsRegisterPageWadhghat" duration-ms="16091" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cmsComplaintRegisterWadhghat -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:50:05 IST" name="aftermethod" finished-at="2024-11-07T19:50:05 IST" duration-ms="173" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cmsComplaintRegisterWadhghat status=SUCCESS method=CMS_Test.cmsComplaintRegisterWadhghat()[pri:4, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.cmsComplaintRegisterWadhghat() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="searchComplaintWadhghat()[pri:5, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:50:05 IST" name="searchComplaintWadhghat" finished-at="2024-11-07T19:50:40 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.cmsComplaintRegisterWadhghat" duration-ms="35037" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- searchComplaintWadhghat -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:50:40 IST" name="aftermethod" finished-at="2024-11-07T19:50:40 IST" duration-ms="233" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=searchComplaintWadhghat status=SUCCESS method=CMS_Test.searchComplaintWadhghat()[pri:5, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.searchComplaintWadhghat() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="Dataentry_owner_info()[pri:6, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:50:40 IST" name="Dataentry_owner_info" finished-at="2024-11-07T19:51:13 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.searchComplaintWadhghat" duration-ms="33458" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Dataentry_owner_info -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:51:13 IST" name="aftermethod" finished-at="2024-11-07T19:51:14 IST" duration-ms="176" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Dataentry_owner_info status=SUCCESS method=CMS_Test.Dataentry_owner_info()[pri:6, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.Dataentry_owner_info() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="Dataentry_floor_info()[pri:7, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:51:14 IST" name="Dataentry_floor_info" finished-at="2024-11-07T19:52:05 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.Dataentry_owner_info" duration-ms="51053" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Dataentry_floor_info -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:52:05 IST" name="aftermethod" finished-at="2024-11-07T19:52:05 IST" duration-ms="178" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Dataentry_floor_info status=SUCCESS method=CMS_Test.Dataentry_floor_info()[pri:7, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.Dataentry_floor_info() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="OldTaxex_info()[pri:8, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:52:05 IST" name="OldTaxex_info" finished-at="2024-11-07T19:53:32 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.Dataentry_floor_info" duration-ms="86903" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- OldTaxex_info -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:53:32 IST" name="aftermethod" finished-at="2024-11-07T19:53:32 IST" duration-ms="240" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=OldTaxex_info status=SUCCESS method=CMS_Test.OldTaxex_info()[pri:8, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.OldTaxex_info() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="AddTaxes_and_UploadFiles()[pri:9, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:53:32 IST" name="AddTaxes_and_UploadFiles" finished-at="2024-11-07T19:55:23 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.OldTaxex_info" duration-ms="111161" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AddTaxes_and_UploadFiles -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:55:23 IST" name="aftermethod" finished-at="2024-11-07T19:55:23 IST" duration-ms="191" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AddTaxes_and_UploadFiles status=SUCCESS method=CMS_Test.AddTaxes_and_UploadFiles()[pri:9, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.AddTaxes_and_UploadFiles() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="WadhghatApproval()[pri:10, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:55:23 IST" name="WadhghatApproval" finished-at="2024-11-07T19:55:37 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.AddTaxes_and_UploadFiles" duration-ms="13605" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WadhghatApproval -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:55:37 IST" name="aftermethod" finished-at="2024-11-07T19:55:37 IST" duration-ms="259" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=WadhghatApproval status=SUCCESS method=CMS_Test.WadhghatApproval()[pri:10, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.CMS_Test.WadhghatApproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="councilapproval()[pri:11, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:55:37 IST" name="councilapproval" finished-at="2024-11-07T19:56:25 IST" depends-on-methods="New_property_Wadhghat.CMS_Test.WadhghatApproval" duration-ms="47331" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[The stored Ekun Kar does not match the displayed Ekun Kar! Stored: null, Displayed:  expected [null] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: The stored Ekun Kar does not match the displayed Ekun Kar! Stored: null, Displayed:  expected [null] but found []
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertEqualsImpl(Assert.java:140)
at org.testng.Assert.assertEquals(Assert.java:122)
at org.testng.Assert.assertEquals(Assert.java:629)
at New_property_Wadhghat.CMS_Test.councilapproval(CMS_Test.java:474)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- councilapproval -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.CMS_Test@752325ad]" started-at="2024-11-07T19:56:25 IST" name="aftermethod" finished-at="2024-11-07T19:56:25 IST" duration-ms="209" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=councilapproval status=FAILURE method=CMS_Test.councilapproval()[pri:11, instance:New_property_Wadhghat.CMS_Test@752325ad] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[private void New_property_Wadhghat.CMS_Test.councilapproval() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- New_property_Wadhghat.CMS_Test -->
    </test> <!-- CreateNewProperty -->
    <test started-at="2024-11-07T19:56:25 IST" name="All Payments" finished-at="2024-11-07T20:03:42 IST" duration-ms="436866">
      <class name="Payments.alltypepayments">
        <test-method signature="CashPayment()[pri:2, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-07T19:56:25 IST" name="CashPayment" finished-at="2024-11-07T19:57:59 IST" duration-ms="93790" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CashPayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-07T19:57:59 IST" name="aftermethod" finished-at="2024-11-07T19:57:59 IST" duration-ms="242" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CashPayment status=SUCCESS method=alltypepayments.CashPayment()[pri:2, instance:Payments.alltypepayments@3543df7d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.CashPayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="chequePayment()[pri:4, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-07T19:57:59 IST" name="chequePayment" finished-at="2024-11-07T19:59:12 IST" duration-ms="72908" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chequePayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-07T19:59:12 IST" name="aftermethod" finished-at="2024-11-07T19:59:12 IST" duration-ms="192" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chequePayment status=SUCCESS method=alltypepayments.chequePayment()[pri:4, instance:Payments.alltypepayments@3543df7d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.chequePayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cheque_fail()[pri:5, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-07T19:59:12 IST" name="cheque_fail" finished-at="2024-11-07T19:59:52 IST" depends-on-methods="Payments.alltypepayments.chequePayment" duration-ms="39918" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cheque_fail -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-07T19:59:52 IST" name="aftermethod" finished-at="2024-11-07T19:59:52 IST" duration-ms="246" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cheque_fail status=SUCCESS method=alltypepayments.cheque_fail()[pri:5, instance:Payments.alltypepayments@3543df7d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.cheque_fail() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="chequePaymentforClear()[pri:6, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-07T19:59:52 IST" name="chequePaymentforClear" finished-at="2024-11-07T20:01:07 IST" duration-ms="75022" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- chequePaymentforClear -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-07T20:01:07 IST" name="aftermethod" finished-at="2024-11-07T20:01:07 IST" duration-ms="220" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=chequePaymentforClear status=SUCCESS method=alltypepayments.chequePaymentforClear()[pri:6, instance:Payments.alltypepayments@3543df7d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.chequePaymentforClear() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="cheque_clear()[pri:7, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-07T20:01:07 IST" name="cheque_clear" finished-at="2024-11-07T20:01:58 IST" duration-ms="50310" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Counter is not cleared expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Counter is not cleared expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at Payments.alltypepayments.cheque_clear(alltypepayments.java:566)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1597)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- cheque_clear -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-07T20:01:58 IST" name="aftermethod" finished-at="2024-11-07T20:01:58 IST" duration-ms="271" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=cheque_clear status=FAILURE method=alltypepayments.cheque_clear()[pri:7, instance:Payments.alltypepayments@3543df7d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.cheque_clear() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="Card()[pri:8, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-07T20:01:58 IST" name="Card" finished-at="2024-11-07T20:03:41 IST" duration-ms="103443" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Card -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-07T20:03:41 IST" name="aftermethod" finished-at="2024-11-07T20:03:42 IST" duration-ms="232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Card status=SUCCESS method=alltypepayments.Card()[pri:8, instance:Payments.alltypepayments@3543df7d] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.alltypepayments.Card() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:Payments.alltypepayments@3543df7d]" started-at="2024-11-07T20:03:42 IST" name="aftertest" finished-at="2024-11-07T20:03:42 IST" duration-ms="55" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- Payments.alltypepayments -->
    </test> <!-- All Payments -->
    <test started-at="2024-11-07T20:03:42 IST" name="MinorChanges" finished-at="2024-11-07T20:04:58 IST" duration-ms="76167">
      <class name="New_property_Wadhghat.MinorChanges">
        <test-method signature="performMinorChangeAndVerify()[pri:2, instance:New_property_Wadhghat.MinorChanges@5bd82fed]" started-at="2024-11-07T20:03:42 IST" name="performMinorChangeAndVerify" finished-at="2024-11-07T20:04:58 IST" duration-ms="75896" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- performMinorChangeAndVerify -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult,java.lang.reflect.Method)[pri:0, instance:New_property_Wadhghat.MinorChanges@5bd82fed]" started-at="2024-11-07T20:04:58 IST" name="aftermethod" finished-at="2024-11-07T20:04:58 IST" duration-ms="268" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=performMinorChangeAndVerify status=SUCCESS method=MinorChanges.performMinorChangeAndVerify()[pri:2, instance:New_property_Wadhghat.MinorChanges@5bd82fed] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void New_property_Wadhghat.MinorChanges.performMinorChangeAndVerify() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
      </class> <!-- New_property_Wadhghat.MinorChanges -->
    </test> <!-- MinorChanges -->
    <test started-at="2024-11-07T20:04:58 IST" name="CollectionReport" finished-at="2024-11-07T20:05:41 IST" duration-ms="42637">
      <class name="Reports.CollectionReports">
        <test-method signature="collectiontest()[pri:2, instance:Reports.CollectionReports@3eeb318f]" started-at="2024-11-07T20:04:58 IST" name="collectiontest" finished-at="2024-11-07T20:05:40 IST" duration-ms="42567" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- collectiontest -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Reports.CollectionReports@3eeb318f]" started-at="2024-11-07T20:05:40 IST" name="tearDown" finished-at="2024-11-07T20:05:41 IST" duration-ms="62" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Reports.CollectionReports -->
    </test> <!-- CollectionReport -->
    <test started-at="2024-11-07T20:05:41 IST" name="ReportEngine" finished-at="2024-11-07T20:07:30 IST" duration-ms="108995">
      <class name="Reports.ReportEngine">
        <test-method signature="Notice_report()[pri:2, instance:Reports.ReportEngine@13cf7d52]" started-at="2024-11-07T20:05:41 IST" name="Notice_report" finished-at="2024-11-07T20:06:34 IST" duration-ms="53755" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Notice_report -->
        <test-method signature="Karakarni_report()[pri:3, instance:Reports.ReportEngine@13cf7d52]" started-at="2024-11-07T20:06:34 IST" name="Karakarni_report" finished-at="2024-11-07T20:07:29 IST" duration-ms="55183" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Karakarni_report -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:Reports.ReportEngine@13cf7d52]" started-at="2024-11-07T20:07:29 IST" name="tearDown" finished-at="2024-11-07T20:07:30 IST" duration-ms="51" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Reports.ReportEngine -->
    </test> <!-- ReportEngine -->
  </suite> <!-- Suite -->
</testng-results>
