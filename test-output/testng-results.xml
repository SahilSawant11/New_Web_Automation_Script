<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="3" total="7" passed="3" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-11-07T13:30:16Z" name="Default suite" finished-at="2024-11-07T13:36:20Z" duration-ms="364017">
    <groups>
    </groups>
    <test started-at="2024-11-07T13:30:16Z" name="Default test" finished-at="2024-11-07T13:36:20Z" duration-ms="364017">
      <class name="Payments.PCMC_alltypepayments">
        <test-method is-config="true" signature="beforetest()[pri:0, instance:Payments.PCMC_alltypepayments@2eea88a1]" started-at="2024-11-07T19:00:16Z" name="beforetest" finished-at="2024-11-07T19:00:23Z" duration-ms="7082" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforetest -->
        <test-method signature="loginPage()[pri:1, instance:Payments.PCMC_alltypepayments@2eea88a1]" started-at="2024-11-07T19:00:24Z" name="loginPage" finished-at="2024-11-07T19:00:51Z" duration-ms="27005" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginPage -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.PCMC_alltypepayments@2eea88a1]" started-at="2024-11-07T19:00:51Z" name="aftermethod" finished-at="2024-11-07T19:00:51Z" duration-ms="779" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=loginPage status=SUCCESS method=PCMC_alltypepayments.loginPage()[pri:1, instance:Payments.PCMC_alltypepayments@2eea88a1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.PCMC_alltypepayments.loginPage() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="CashPayment()[pri:2, instance:Payments.PCMC_alltypepayments@2eea88a1]" started-at="2024-11-07T19:00:51Z" name="CashPayment" finished-at="2024-11-07T19:02:38Z" depends-on-methods="Payments.PCMC_alltypepayments.loginPage" duration-ms="106911" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CashPayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.PCMC_alltypepayments@2eea88a1]" started-at="2024-11-07T19:02:38Z" name="aftermethod" finished-at="2024-11-07T19:02:38Z" duration-ms="255" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CashPayment status=SUCCESS method=PCMC_alltypepayments.CashPayment()[pri:2, instance:Payments.PCMC_alltypepayments@2eea88a1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.PCMC_alltypepayments.CashPayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="Card()[pri:7, instance:Payments.PCMC_alltypepayments@2eea88a1]" started-at="2024-11-07T19:02:38Z" name="Card" finished-at="2024-11-07T19:04:13Z" depends-on-methods="Payments.PCMC_alltypepayments.loginPage" duration-ms="94347" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Card -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.PCMC_alltypepayments@2eea88a1]" started-at="2024-11-07T19:04:13Z" name="aftermethod" finished-at="2024-11-07T19:04:13Z" duration-ms="232" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Card status=SUCCESS method=PCMC_alltypepayments.Card()[pri:7, instance:Payments.PCMC_alltypepayments@2eea88a1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.PCMC_alltypepayments.Card() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method signature="AdvancePayment()[pri:8, instance:Payments.PCMC_alltypepayments@2eea88a1]" started-at="2024-11-07T19:04:13Z" name="AdvancePayment" finished-at="2024-11-07T19:06:20Z" duration-ms="127068" status="FAIL">
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //*[@id="ContentPlaceHolder1_GVDownloads"]/tbody/tr[1]/th[1]' (tried for 60 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator 'By.xpath: //*[@id="ContentPlaceHolder1_GVDownloads"]/tbody/tr[1]/th[1]' (tried for 60 second(s) with 500 milliseconds interval)
	at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:84)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:228)
	at pom.CounterPaymentPage.label_downloadReceipt(CounterPaymentPage.java:945)
	at Payments.PCMC_alltypepayments.AdvancePayment(PCMC_alltypepayments.java:224)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
	at java.base/java.lang.reflect.Method.invoke(Method.java:580)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:293)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:91)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//*[@id="ContentPlaceHolder1_GVDownloads"]/tbody/tr[1]/th[1]"}
  (Session info: chrome=130.0.6723.92)
For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception
Build info: version: '4.19.1', revision: 'abe0ee07dc'
System info: os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '23'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Command: [4f0906fcfd9c45426d6d99a7713fca79, findElement {using=xpath, value=//*[@id="ContentPlaceHolder1_GVDownloads"]/tbody/tr[1]/th[1]}]
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 130.0.6723.92, chrome: {chromedriverVersion: 130.0.6723.116 (6ac35f94ae3..., userDataDir: C:\Users\admin\AppData\Loca...}, fedcm:accounts: true, goog:chromeOptions: {debuggerAddress: localhost:54648}, networkConnectionEnabled: false, pageLoadStrategy: normal, platformName: windows, proxy: Proxy(), se:cdp: ws://localhost:54648/devtoo..., se:cdpVersion: 130.0.6723.92, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 4f0906fcfd9c45426d6d99a7713fca79
	at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)
	at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:501)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:485)
	at org.openqa.selenium.remote.ErrorCodec.decode(ErrorCodec.java:167)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:138)
	at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:50)
	at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:190)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:216)
	at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:174)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:518)
	at org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:165)
	at org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:59)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:349)
	at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:68)
	at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
	at jdk.proxy2/jdk.proxy2.$Proxy18.isDisplayed(Unknown Source)
	at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:304)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)
	at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:287)
	at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:203)
	... 25 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AdvancePayment -->
        <test-method is-config="true" signature="aftermethod(org.testng.ITestResult, java.lang.reflect.Method)[pri:0, instance:Payments.PCMC_alltypepayments@2eea88a1]" started-at="2024-11-07T19:06:20Z" name="aftermethod" finished-at="2024-11-07T19:06:20Z" duration-ms="245" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AdvancePayment status=FAILURE method=PCMC_alltypepayments.AdvancePayment()[pri:8, instance:Payments.PCMC_alltypepayments@2eea88a1] output={null}]]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[public void Payments.PCMC_alltypepayments.AdvancePayment() throws java.lang.Exception]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftermethod -->
        <test-method is-config="true" signature="aftertest()[pri:0, instance:Payments.PCMC_alltypepayments@2eea88a1]" started-at="2024-11-07T19:06:20Z" name="aftertest" finished-at="2024-11-07T19:06:20Z" duration-ms="40" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftertest -->
      </class> <!-- Payments.PCMC_alltypepayments -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
